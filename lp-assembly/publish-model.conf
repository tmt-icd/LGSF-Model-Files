subsystem = LGSF
component = lp
  
publish {
  events = [
    {
      name            = status
      description     = status
      archive         = true
      archiveRate     = 0.1
      attributes      = [
        {
          name        = cmd
          description = Command state.
          enum        = [ UNINITIALIZED, READY, BUSY, CONTINUOUS ]
        }
        {
          name        = debug
          description = Current debug message level.
          enum        = [ DEBUG, INFO, WARN, ERROR ]
        }
        {
          name        = stage
          description = Position of low power stage
          enum        = [IN, OUT, INTERMEDIATE, UNKNOWN]
        }
        {
          name        = ratio
          description = low power ratio
          type        = double
          units       = percentage
        }
        {
          name        = angle
          description = angle of HWP
          type        = double
          units       = degree
        }
      ]
    }
    {
      name            = cmdStatus
      description     = Recent command status. (engineering)
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = Rrecent command name.
          type        = string
        }
        {
          name        = args
          description = Recent command arguments. Empty string if no arguments are supplied.
          type        = string
        }
        {
          name        = caller
          description = Recent command caller (if available).
          type        = string
        }
        {
          name        = runId
          description = Run ID associated with the recent command.
          type        = integer 
        }
        {
          name        = ack
          description = Recent command acknowledgement status.
          enum        = [ ACCEPTED, REJECTED ]
        }
        {
          name        = ackMsg
          description = Recent command acknowledgement message. Empty string if acknowledgement is ACCEPTED.
          type        = string
        }
        {
          name        = comp
          description = Recent command completion status.
          enum        = [ INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED ]
        }
        {
          name        = compMsg
          description = Recent command completion message. Empty string if completion is INPROGRESS or SUCCESS.
          type        = string
        }
      ]
    }
  ]

}
