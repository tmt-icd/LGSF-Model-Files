subsystem = LGSF
component = op
description = Optical Path Assembly commands.

receive = [
  
  {
    name            = init
    description     = """Prepares the assembly for operation and reads configuration files. (engineering)"""
    
    args = [
      {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = debug
    description     = Set the debug message level.  (engineering)
    args = [
      {
        name        = debug
        description = target debug level
        enum        = [ DEBUG, INFO, WARN, ERROR ] 
      }
    ]
    requiredArgs = [ debug ]
  }
  {
    name            = shutdown
    description     = Shutdown the assembly.  (engineering)
  }
  {
    name            = datum
    description     = Datum the actuators
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam_select
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
  {
    name            = stop
    description     = Stop the actuators
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam_select
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
{

    name            = follow
    description     = Control the actuators following LUT or PAC
    args = [
      {
        name        = mode
        description = Mode of following
        enum        = [NOOP, OFF, LUT, PAC]
      }
      {
        name		    = all
        description	= Select all available mechanisms
        type        = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
  {
    name            = exposure
    description     = set the PAC exposure time and mode
    args = [
      {
        name        = enabled
        description = Exposure enabled
        type        = boolean
      }
      {
        name        = exposureTime
        description = Exposure time
        type        = double
        units       = seconds
      }
      {
        name        = exposureRate
        description = Exposure frame rate
        type        = double
        units       = hertz
      }
      {
        name        = PAC
        description = List of PAC
        type		    = array
        items = {
          type = string
        }
      }
      {
        name        = led
        description = Turn on led using PAC strobe signal
        type        = boolean
      }
    ]
  }
  {
    name            = calibPac
    description     = Calibrate the PAC beam boundary and origin
    args = [
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = PAC
        description = List of PAC
        type		    = array
        items = {
          type = string
        }
      }
      {
        name        = offset
        description = Pac beam target position offset
        type        = array
        units       = pixel
      }
      {
        name        = origin
        description = Origin of each beam/mirror
        type        = array
        units       = pixel
      }
    ]
  }
  {
    name            = calibControl
    description     = Calibrate the control matrices of actuator using PACs
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type        = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
  
]
send = [
  {
    subsystem = LGSF
    component = pac
    name = init
  }
  {
    subsystem = LGSF
    component = pac
    name = debug
  }
  {
    subsystem = LGSF
    component = pac
    name = shutdown
  }
  {
    subsystem = LGSF
    component = pac
    name = exposure
  }
  {
    subsystem = LGSF
    component = pac
    name = calib
  }
]