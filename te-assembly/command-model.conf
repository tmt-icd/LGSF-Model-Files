subsystem = LGSF
component = te

description = Top End Assembly commands.

receive = [
  
  {
    name            = init
    description     = """Prepares the assembly for operation and reads configuration files. (engineering)"""
    
    args = [
      {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }
  {
    name            = debug
    description     = Set the debug message level.  (engineering)
    args = [
      {
        name        = debug
        description = target debug level
        enum        = [ DEBUG, INFO, WARN, ERROR ] 
      }
    ]
    requiredArgs    = [ debug ]
  }
  {
    name            = shutdown
    description     = Shutdown the assembly.  (engineering)
  }  

  {
    name            = cover
    description     = Open or close the LLT cover
    args = [
      {
        name        = select
        description = target position
        enum        = [OPEN, CLOSE]
      }
    ]
    requiredArgs = [ select ]
  }
  {
    name            = datum
    description     = Datum the actuators
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
{
    name            = stop
    description     = Stop the actuators
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
{
    name            = follow
    description     = Enable continuous control of the actuators
    args = [
      {
        name        = mode
        description = Mode of following
        enum        = [NOOP, OFF, LUT, PAC]
      }
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
{
    name            = calibControl
    description     = Calibrate the control matrices of each mirror
    args = [
      {
        name		    = all
        description	= Select all available mechanisms
        type		    = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }

  {
    name            = calibPointing
    description     = Calibrate the on axis beam pointing using LLT PACs
    args = [
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = type
        description = calibration type
        enum        = [onAxisLLT, onAxisAG, OffAxisLLT, OffAxisAG, FCS, KM]
      }
      {
        name        = saveLut
        description = Save lookup table
        type        = boolean
      }
    ]
  }

  {
    name            = offsetFCS
    description     = Offsetting the FCS
    args = [
      {
        name        = move
        description = FCS pointing override
        type        = array
        dimensions  = [2]
        items = {
          type      = double
          units     = arcsec
        }
      }
      {
        name        = saveLut
        description = Save lookup table
        type        = boolean
      }
    ]
  }

  {
    name            = offsetKm
    description     = Offset the KM rotator
    args = [
      {
        name        = move
        description = KM angle override
        type        = double
        units       = degrees
      }
      {
        name        = saveLut
        description = Save lookup table
        type        = boolean
      }
    ]
  }

  {
    name            = asterism
    description     = Configure the asterism
    args = [
      {
        name        = asterism
        description = The selected asterism
        enum        = [NFIRAOS, GLAO, MOAO, MIRAO]
      }
    ]
  }

  {
    name            = offload
    description     = Configure the offloading
    args = [
      {
        name        = enabled
        description = enabled or not
        type        = boolean
      }
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }

      {
        name        = mirror
        description = List of mirrors
        type		    = array
        items = {
          type = string
        }
      }
    ]
  }
 
  {
    name            = exposure
    description     = set the exposure time and mode
    args = [
      {
        name        = enabled
        description = Exposure enabled
        type        = boolean
      }
      {
        name        = exposureTime
        description = Exposure time
        type        = double
        units       = seconds
      }
      {
        name        = exposureRate
        description = Exposure frame rate
        type        = double
        units       = hertz
      }
      {
        name        = PAC
        description = List of PAC
        type		    = array
        items = {
          type = string
        }
      }
     {
        name        = DSWFS
        description = DSWFS exposure
        type		    = boolean
      }
    ]
  }
  {
    name            = calibPac
    description     = Calibrate the PAC beam boundary and origin
    args = [
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
      {
        name        = PAC
        description = List of PAC
        type		    = array
        items = {
          type = string
        }
      }
      {
        name        = offset
        description = Pac target position offset
        type        = array
        units       = mm
      }
    ]
  }
  {
    name            = calibDswfs
    description     = set DSWFS subaperture parameters
    args = [
      {
        name        = beam
        description = Beam select
        type		    = array
        dimensions	= [8]
        items = {
	        type    	= boolean
		    }
      }
   
      {
        name        = subapertureScale
        description = Subaperture plate scale on the detector
        type        = double
        units       = arcsec/pixel
      }
 
      {
        name        = subapertureLocation
        description = Center Location of each subapertures on the detector
        type        = array
        items = {
          type      = double
          units     = pixel
        }
      }
      {
        name        = subapertureSize
        description = Size of subapertures on the detector
        type        = double
        units       = pixel
      }
      {
        name        = gradReferenceSet
        description = Subaperture gradient reference for computing gradients
        enum        = [CURRENT, INPUT, NOOP]
      }
      {
        name        = gradReferenceInput
        description = Subaperture gradient reference input for computing gradients
        type        = array
        items = {
          type      = double
          units     = pixel
        }
      }
      {
        name        = pupilReferenceSet
        description = Pupil location reference 
        enum        = [CURRENT, INPUT, NOOP]
      }
      {
        name        = pupilReferenceInput
        description = Pupil location reference input
        type        = array
        items = {
          type      = double
          units     = pixel
        }
      }
      
      {
        name        = throughput
        description = End to end throughput for power meter calibration
        type        = double
      }
 
      {
        name        = save
        description = Save current configuration as reference
        type        = boolean
      }
    ]
  }
  

]
